// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NMKTAPP.DatabaseContext.DatabaseContext;

namespace NMKTAPP.DataBaseContext.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20220805165126_ser name delete")]
    partial class sernamedelete
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("NMKTAPP.Models.Models.Seller.SellerInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("sellName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SellerInfo");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.Service.ServiceInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SellerInfoId")
                        .HasColumnType("int");

                    b.Property<string>("extraServices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offeredServices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("whyUs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("SellerInfoId");

                    b.ToTable("ServiceInfos");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("usrEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrPass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.Service.ServiceInfo", b =>
                {
                    b.HasOne("NMKTAPP.Models.Models.Seller.SellerInfo", "SellerInfo")
                        .WithMany()
                        .HasForeignKey("SellerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SellerInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
