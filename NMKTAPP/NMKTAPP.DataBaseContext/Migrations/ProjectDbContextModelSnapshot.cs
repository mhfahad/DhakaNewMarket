// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NMKTAPP.DatabaseContext.DatabaseContext;

namespace NMKTAPP.DataBaseContext.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("NMKTAPP.Models.Models.Service.CompanyInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("binNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("confirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licenseKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userUId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("companyInfos");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.Service.SerCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("serCategories");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.Service.ServiceInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CompanyInfoId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("extraServices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offeredServices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("serCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("serImg1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serImg2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serImg3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serImg4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userUId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("whyUs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CompanyInfoId");

                    b.HasIndex("serCategoryId");

                    b.ToTable("ServiceInfos");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("usrEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrPass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.Service.CompanyInfo", b =>
                {
                    b.HasOne("NMKTAPP.Models.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NMKTAPP.Models.Models.Service.ServiceInfo", b =>
                {
                    b.HasOne("NMKTAPP.Models.Models.Service.CompanyInfo", "companyInfo")
                        .WithMany()
                        .HasForeignKey("CompanyInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NMKTAPP.Models.Models.Service.SerCategory", "serCategory")
                        .WithMany()
                        .HasForeignKey("serCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("companyInfo");

                    b.Navigation("serCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
